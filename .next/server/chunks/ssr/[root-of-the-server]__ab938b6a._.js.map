{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/RextonItsiah/Documents/GitHub/Qwesi-latest/lib/features/cart/cartSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState: {\n        total: 0,\n        cartItems: {},\n    },\n    reducers: {\n        addToCart: (state, action) => {\n            const { productId } = action.payload\n            if (state.cartItems[productId]) {\n                state.cartItems[productId]++\n            } else {\n                state.cartItems[productId] = 1\n            }\n            state.total += 1\n        },\n        removeFromCart: (state, action) => {\n            const { productId } = action.payload\n            if (state.cartItems[productId]) {\n                state.cartItems[productId]--\n                if (state.cartItems[productId] === 0) {\n                    delete state.cartItems[productId]\n                }\n            }\n            state.total -= 1\n        },\n        deleteItemFromCart: (state, action) => {\n            const { productId } = action.payload\n            state.total -= state.cartItems[productId] ? state.cartItems[productId] : 0\n            delete state.cartItems[productId]\n        },\n        setCart: (state, action) => {\n            const { cartItems, total } = action.payload;\n            state.cartItems = cartItems;\n            state.total = total;\n        },\n        clearCart: (state) => {\n            state.cartItems = {}\n            state.total = 0\n        },\n    }\n})\n\nexport const { addToCart, removeFromCart, clearCart, deleteItemFromCart, setCart } = cartSlice.actions\n\nexport default cartSlice.reducer"],"names":[],"mappings":";;;;;;;;AAAA;;AAEA,MAAM,YAAY,CAAA,GAAA,2LAAA,CAAA,cAAW,AAAD,EAAE;IAC1B,MAAM;IACN,cAAc;QACV,OAAO;QACP,WAAW,CAAC;IAChB;IACA,UAAU;QACN,WAAW,CAAC,OAAO;YACf,MAAM,EAAE,SAAS,EAAE,GAAG,OAAO,OAAO;YACpC,IAAI,MAAM,SAAS,CAAC,UAAU,EAAE;gBAC5B,MAAM,SAAS,CAAC,UAAU;YAC9B,OAAO;gBACH,MAAM,SAAS,CAAC,UAAU,GAAG;YACjC;YACA,MAAM,KAAK,IAAI;QACnB;QACA,gBAAgB,CAAC,OAAO;YACpB,MAAM,EAAE,SAAS,EAAE,GAAG,OAAO,OAAO;YACpC,IAAI,MAAM,SAAS,CAAC,UAAU,EAAE;gBAC5B,MAAM,SAAS,CAAC,UAAU;gBAC1B,IAAI,MAAM,SAAS,CAAC,UAAU,KAAK,GAAG;oBAClC,OAAO,MAAM,SAAS,CAAC,UAAU;gBACrC;YACJ;YACA,MAAM,KAAK,IAAI;QACnB;QACA,oBAAoB,CAAC,OAAO;YACxB,MAAM,EAAE,SAAS,EAAE,GAAG,OAAO,OAAO;YACpC,MAAM,KAAK,IAAI,MAAM,SAAS,CAAC,UAAU,GAAG,MAAM,SAAS,CAAC,UAAU,GAAG;YACzE,OAAO,MAAM,SAAS,CAAC,UAAU;QACrC;QACA,SAAS,CAAC,OAAO;YACb,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,OAAO;YAC3C,MAAM,SAAS,GAAG;YAClB,MAAM,KAAK,GAAG;QAClB;QACA,WAAW,CAAC;YACR,MAAM,SAAS,GAAG,CAAC;YACnB,MAAM,KAAK,GAAG;QAClB;IACJ;AACJ;AAEO,MAAM,EAAE,SAAS,EAAE,cAAc,EAAE,SAAS,EAAE,kBAAkB,EAAE,OAAO,EAAE,GAAG,UAAU,OAAO;uCAEvF,UAAU,OAAO","debugId":null}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/RextonItsiah/Documents/GitHub/Qwesi-latest/lib/features/product/productSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst productSlice = createSlice({\r\n    name: 'product',\r\n    initialState: {\r\n        list: [], // Remove dummy data\r\n    },\r\n    reducers: {\r\n        setProduct: (state, action) => {\r\n            state.list = action.payload\r\n        },\r\n        clearProduct: (state) => {\r\n            state.list = []\r\n        }\r\n    }\r\n})\r\n\r\nexport const { setProduct, clearProduct } = productSlice.actions\r\n\r\nexport default productSlice.reducer\r\n"],"names":[],"mappings":";;;;;AAAA;;AAEA,MAAM,eAAe,CAAA,GAAA,2LAAA,CAAA,cAAW,AAAD,EAAE;IAC7B,MAAM;IACN,cAAc;QACV,MAAM,EAAE;IACZ;IACA,UAAU;QACN,YAAY,CAAC,OAAO;YAChB,MAAM,IAAI,GAAG,OAAO,OAAO;QAC/B;QACA,cAAc,CAAC;YACX,MAAM,IAAI,GAAG,EAAE;QACnB;IACJ;AACJ;AAEO,MAAM,EAAE,UAAU,EAAE,YAAY,EAAE,GAAG,aAAa,OAAO;uCAEjD,aAAa,OAAO","debugId":null}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/RextonItsiah/Documents/GitHub/Qwesi-latest/lib/features/address/addressSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst addressSlice = createSlice({\r\n    name: 'address',\r\n    initialState: {\r\n        list: [], // Remove dummy data\r\n    },\r\n    reducers: {\r\n        addAddress: (state, action) => {\r\n            state.list.push(action.payload)\r\n        },\r\n        setAddresses: (state, action) => {\r\n            state.list = action.payload\r\n        },\r\n        updateAddress: (state, action) => {\r\n            const index = state.list.findIndex(addr => addr.id === action.payload.id)\r\n            if (index !== -1) {\r\n                state.list[index] = action.payload\r\n            }\r\n        },\r\n        deleteAddress: (state, action) => {\r\n            state.list = state.list.filter(addr => addr.id !== action.payload)\r\n        }\r\n    }\r\n})\r\n\r\nexport const { addAddress, setAddresses, updateAddress, deleteAddress } = addressSlice.actions\r\n\r\nexport default addressSlice.reducer\r\n"],"names":[],"mappings":";;;;;;;AAAA;;AAEA,MAAM,eAAe,CAAA,GAAA,2LAAA,CAAA,cAAW,AAAD,EAAE;IAC7B,MAAM;IACN,cAAc;QACV,MAAM,EAAE;IACZ;IACA,UAAU;QACN,YAAY,CAAC,OAAO;YAChB,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,OAAO;QAClC;QACA,cAAc,CAAC,OAAO;YAClB,MAAM,IAAI,GAAG,OAAO,OAAO;QAC/B;QACA,eAAe,CAAC,OAAO;YACnB,MAAM,QAAQ,MAAM,IAAI,CAAC,SAAS,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK,OAAO,OAAO,CAAC,EAAE;YACxE,IAAI,UAAU,CAAC,GAAG;gBACd,MAAM,IAAI,CAAC,MAAM,GAAG,OAAO,OAAO;YACtC;QACJ;QACA,eAAe,CAAC,OAAO;YACnB,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK,OAAO,OAAO;QACrE;IACJ;AACJ;AAEO,MAAM,EAAE,UAAU,EAAE,YAAY,EAAE,aAAa,EAAE,aAAa,EAAE,GAAG,aAAa,OAAO;uCAE/E,aAAa,OAAO","debugId":null}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/RextonItsiah/Documents/GitHub/Qwesi-latest/lib/features/rating/ratingSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst ratingSlice = createSlice({\r\n    name: 'rating',\r\n    initialState: {\r\n        ratings: [],\r\n    },\r\n    reducers: {\r\n        addRating: (state, action) => {\r\n            state.ratings.push(action.payload)\r\n        },\r\n    }\r\n})\r\n\r\nexport const { addRating } = ratingSlice.actions\r\n\r\nexport default ratingSlice.reducer"],"names":[],"mappings":";;;;AAAA;;AAGA,MAAM,cAAc,CAAA,GAAA,2LAAA,CAAA,cAAW,AAAD,EAAE;IAC5B,MAAM;IACN,cAAc;QACV,SAAS,EAAE;IACf;IACA,UAAU;QACN,WAAW,CAAC,OAAO;YACf,MAAM,OAAO,CAAC,IAAI,CAAC,OAAO,OAAO;QACrC;IACJ;AACJ;AAEO,MAAM,EAAE,SAAS,EAAE,GAAG,YAAY,OAAO;uCAEjC,YAAY,OAAO","debugId":null}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/RextonItsiah/Documents/GitHub/Qwesi-latest/lib/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\r\nimport cartReducer from './features/cart/cartSlice'\r\nimport productReducer from './features/product/productSlice'\r\nimport addressReducer from './features/address/addressSlice'\r\nimport ratingReducer from './features/rating/ratingSlice'\r\n\r\nexport const makeStore = () => {\r\n    return configureStore({\r\n        reducer: {\r\n            cart: cartReducer,\r\n            product: productReducer,\r\n            address: addressReducer,\r\n            rating: ratingReducer,\r\n        },\r\n    })\r\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;;;;;AAEO,MAAM,YAAY;IACrB,OAAO,CAAA,GAAA,2LAAA,CAAA,iBAAc,AAAD,EAAE;QAClB,SAAS;YACL,MAAM,oIAAA,CAAA,UAAW;YACjB,SAAS,0IAAA,CAAA,UAAc;YACvB,SAAS,0IAAA,CAAA,UAAc;YACvB,QAAQ,wIAAA,CAAA,UAAa;QACzB;IACJ;AACJ","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/RextonItsiah/Documents/GitHub/Qwesi-latest/app/StoreProvider.js"],"sourcesContent":["'use client'\r\nimport { useRef } from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { makeStore } from '../lib/store'\r\n\r\nexport default function StoreProvider({ children }) {\r\n  const storeRef = useRef(undefined)\r\n  if (!storeRef.current) {\r\n    // Create the store instance the first time this renders\r\n    storeRef.current = makeStore()\r\n  }\r\n\r\n  return <Provider store={storeRef.current}>{children}</Provider>\r\n}"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAHA;;;;;AAKe,SAAS,cAAc,EAAE,QAAQ,EAAE;IAChD,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAE;IACxB,IAAI,CAAC,SAAS,OAAO,EAAE;QACrB,wDAAwD;QACxD,SAAS,OAAO,GAAG,CAAA,GAAA,4GAAA,CAAA,YAAS,AAAD;IAC7B;IAEA,qBAAO,8OAAC,yJAAA,CAAA,WAAQ;QAAC,OAAO,SAAS,OAAO;kBAAG;;;;;;AAC7C","debugId":null}}]
}