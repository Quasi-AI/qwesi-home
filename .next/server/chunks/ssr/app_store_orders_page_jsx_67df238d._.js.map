{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/RextonItsiah/Documents/GitHub/Qwesi-latest/app/store/orders/page.jsx"],"sourcesContent":["'use client'\r\nimport { useEffect, useState } from \"react\"\r\nimport Loading from \"@/components/Loading\"\r\nimport { toast } from \"react-hot-toast\"\r\n\r\nconst API_BASE_URL = 'https://dark-caldron-448714-u5.uc.r.appspot.com/api'\r\n\r\nexport default function StoreOrders() {\r\n    const [orders, setOrders] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [selectedOrder, setSelectedOrder] = useState(null)\r\n    const [isModalOpen, setIsModalOpen] = useState(false)\r\n\r\n    const fetchOrders = async () => {\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/orders`)\r\n            if (response.ok) {\r\n                const result = await response.json()\r\n                const data = result.data || result\r\n                setOrders(Array.isArray(data) ? data : [])\r\n            } else {\r\n                throw new Error('Failed to fetch orders')\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching orders:', error)\r\n            toast.error('Failed to fetch orders')\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const updateOrderStatus = async (orderId, status) => {\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/orders/${orderId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ status })\r\n            })\r\n\r\n            if (response.ok) {\r\n                setOrders(orders.map(order => \r\n                    order._id === orderId ? { ...order, status } : order\r\n                ))\r\n                toast.success('Order status updated successfully')\r\n            } else {\r\n                throw new Error('Failed to update order status')\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating order status:', error)\r\n            toast.error('Failed to update order status')\r\n        }\r\n    }\r\n\r\n    const openModal = (order) => {\r\n        setSelectedOrder(order)\r\n        setIsModalOpen(true)\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setSelectedOrder(null)\r\n        setIsModalOpen(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchOrders()\r\n    }, [])\r\n\r\n    if (loading) return <Loading />\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"text-2xl text-slate-500 mb-5\">Store <span className=\"text-slate-800 font-medium\">Orders</span></h1>\r\n            {orders.length === 0 ? (\r\n                <p>No orders found</p>\r\n            ) : (\r\n                <div className=\"overflow-x-auto max-w-4xl rounded-md shadow border border-gray-200\">\r\n                    <table className=\"w-full text-sm text-left text-gray-600\">\r\n                        <thead className=\"bg-gray-50 text-gray-700 text-xs uppercase tracking-wider\">\r\n                            <tr>\r\n                                {[\"Sr. No.\", \"Customer\", \"Total\", \"Currency\", \"Items\", \"Status\", \"Date\"].map((heading, i) => (\r\n                                    <th key={i} className=\"px-4 py-3\">{heading}</th>\r\n                                ))}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"divide-y divide-gray-100\">\r\n                            {orders.map((order, index) => (\r\n                                <tr\r\n                                    key={order._id}\r\n                                    className=\"hover:bg-gray-50 transition-colors duration-150 cursor-pointer\"\r\n                                    onClick={() => openModal(order)}\r\n                                >\r\n                                    <td className=\"pl-6 text-green-600\">\r\n                                        {index + 1}\r\n                                    </td>\r\n                                    <td className=\"px-4 py-3\">{order.contact?.name || order.contact?.email || 'Unknown'}</td>\r\n                                    <td className=\"px-4 py-3 font-medium text-slate-800\">${order.total}</td>\r\n                                    <td className=\"px-4 py-3\">{order.currency}</td>\r\n                                    <td className=\"px-4 py-3\">{order.items?.length || 0}</td>\r\n                                    <td className=\"px-4 py-3\" onClick={(e) => { e.stopPropagation() }}>\r\n                                        <select\r\n                                            value={order.status}\r\n                                            onChange={e => updateOrderStatus(order._id, e.target.value)}\r\n                                            className=\"border-gray-300 rounded-md text-sm focus:ring focus:ring-blue-200\"\r\n                                        >\r\n                                            <option value=\"pending\">Pending</option>\r\n                                            <option value=\"paid\">Paid</option>\r\n                                            <option value=\"shipped\">Shipped</option>\r\n                                            <option value=\"completed\">Completed</option>\r\n                                            <option value=\"cancelled\">Cancelled</option>\r\n                                            <option value=\"refunded\">Refunded</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td className=\"px-4 py-3 text-gray-500\">\r\n                                        {new Date(order.createdAt).toLocaleString()}\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )}\r\n\r\n            {/* Modal */}\r\n            {isModalOpen && selectedOrder && (\r\n                <div onClick={closeModal} className=\"fixed inset-0 flex items-center justify-center bg-black/50 text-slate-700 text-sm backdrop-blur-xs z-50\">\r\n                    <div onClick={e => e.stopPropagation()} className=\"bg-white rounded-lg shadow-lg max-w-2xl w-full p-6 relative\">\r\n                        <h2 className=\"text-xl font-semibold text-slate-900 mb-4 text-center\">\r\n                            Order Details\r\n                        </h2>\r\n\r\n                        {/* Customer Details */}\r\n                        <div className=\"mb-4\">\r\n                            <h3 className=\"font-semibold mb-2\">Customer Details</h3>\r\n                            <p><span className=\"text-green-700\">Name:</span> {selectedOrder.contact?.name || 'N/A'}</p>\r\n                            <p><span className=\"text-green-700\">Email:</span> {selectedOrder.contact?.email || 'N/A'}</p>\r\n                            <p><span className=\"text-green-700\">Phone:</span> {selectedOrder.contact?.phone || 'N/A'}</p>\r\n                            <p><span className=\"text-green-700\">Address:</span> {selectedOrder.contact?.address || 'N/A'}</p>\r\n                        </div>\r\n\r\n                        {/* Products */}\r\n                        <div className=\"mb-4\">\r\n                            <h3 className=\"font-semibold mb-2\">Products</h3>\r\n                            <div className=\"space-y-2\">\r\n                                {selectedOrder.items?.map((item, i) => (\r\n                                    <div key={i} className=\"flex items-center gap-4 border border-slate-100 shadow rounded p-2\">\r\n                                        <div className=\"w-16 h-16 bg-slate-100 rounded flex items-center justify-center\">\r\n                                            <span className=\"text-xs\">Product</span>\r\n                                        </div>\r\n                                        <div className=\"flex-1\">\r\n                                            <p className=\"text-slate-800\">{item.name}</p>\r\n                                            <p>Qty: {item.quantity}</p>\r\n                                            <p>Unit Price: ${item.unitPrice}</p>\r\n                                            <p>Subtotal: ${item.subtotal}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Payment & Status */}\r\n                        <div className=\"mb-4\">\r\n                            <p><span className=\"text-green-700\">Payment Provider:</span> {selectedOrder.payment?.provider || 'N/A'}</p>\r\n                            <p><span className=\"text-green-700\">Subtotal:</span> ${selectedOrder.subtotal}</p>\r\n                            <p><span className=\"text-green-700\">Discount:</span> ${selectedOrder.discount}</p>\r\n                            <p><span className=\"text-green-700\">Tax:</span> ${selectedOrder.tax}</p>\r\n                            <p><span className=\"text-green-700\">Shipping:</span> ${selectedOrder.shipping}</p>\r\n                            <p><span className=\"text-green-700\">Total:</span> ${selectedOrder.total}</p>\r\n                            {selectedOrder.couponCode && (\r\n                                <p><span className=\"text-green-700\">Coupon:</span> {selectedOrder.couponCode}</p>\r\n                            )}\r\n                            <p><span className=\"text-green-700\">Status:</span> {selectedOrder.status}</p>\r\n                            <p><span className=\"text-green-700\">Order Date:</span> {new Date(selectedOrder.createdAt).toLocaleString()}</p>\r\n                        </div>\r\n\r\n                        {/* Actions */}\r\n                        <div className=\"flex justify-end\">\r\n                            <button onClick={closeModal} className=\"px-4 py-2 bg-slate-200 rounded hover:bg-slate-300\">\r\n                                Close\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}