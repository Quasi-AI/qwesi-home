{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/RextonItsiah/Documents/GitHub/Qwesi-latest/app/store/manage-product/page.jsx"],"sourcesContent":["'use client'\r\nimport { useEffect, useState } from \"react\"\r\nimport { toast } from \"react-hot-toast\"\r\nimport Image from \"next/image\"\r\nimport Loading from \"@/components/Loading\"\r\n\r\nconst API_BASE_URL = 'https://dark-caldron-448714-u5.uc.r.appspot.com/api'\r\n\r\nexport default function StoreManageProducts() {\r\n    const currency = process.env.NEXT_PUBLIC_CURRENCY_SYMBOL || '$'\r\n\r\n    const [loading, setLoading] = useState(true)\r\n    const [products, setProducts] = useState([])\r\n    const [stores, setStores] = useState([])\r\n    const [selectedStore, setSelectedStore] = useState('')\r\n\r\n    const fetchStores = async () => {\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/stores`)\r\n            if (response.ok) {\r\n                const result = await response.json()\r\n                const data = result.data || result\r\n                const storesArray = Array.isArray(data) ? data : []\r\n                setStores(storesArray)\r\n                if (storesArray.length > 0) {\r\n                    setSelectedStore(storesArray[0]._id)\r\n                }\r\n            } else {\r\n                throw new Error('Failed to fetch stores')\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching stores:', error)\r\n            toast.error('Failed to fetch stores')\r\n        } finally {\r\n            if (!selectedStore) {\r\n                setLoading(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    const fetchProducts = async () => {\r\n        if (!selectedStore) return\r\n\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/stores/${selectedStore}/products`)\r\n            if (response.ok) {\r\n                const data = await response.json()\r\n                setProducts(data)\r\n            } else {\r\n                throw new Error('Failed to fetch products')\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching products:', error)\r\n            toast.error('Failed to fetch products')\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const toggleStock = async (productId) => {\r\n        try {\r\n            const product = products.find(p => p._id === productId)\r\n            const newStockStatus = product.stock > 0 ? 0 : 10 // Toggle between 0 and 10\r\n\r\n            const response = await fetch(`${API_BASE_URL}/stores/${selectedStore}/products/${productId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ stock: newStockStatus }),\r\n            })\r\n\r\n            if (response.ok) {\r\n                const updatedProduct = await response.json()\r\n                setProducts(products.map(p => \r\n                    p._id === productId ? updatedProduct : p\r\n                ))\r\n                toast.success('Product stock updated successfully')\r\n            } else {\r\n                throw new Error('Failed to update product stock')\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating product stock:', error)\r\n            toast.error('Failed to update product stock')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchStores()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (selectedStore) {\r\n            fetchProducts()\r\n        }\r\n    }, [selectedStore])\r\n\r\n    if (loading) return <Loading />\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"text-2xl text-slate-500 mb-5\">Manage <span className=\"text-slate-800 font-medium\">Products</span></h1>\r\n            \r\n            {/* Store Selection */}\r\n            {stores.length > 1 && (\r\n                <div className=\"mb-5\">\r\n                    <label className=\"block text-sm font-medium text-slate-700 mb-2\">Select Store</label>\r\n                    <select\r\n                        value={selectedStore}\r\n                        onChange={(e) => setSelectedStore(e.target.value)}\r\n                        className=\"border border-slate-200 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    >\r\n                        {stores.map((store) => (\r\n                            <option key={store._id} value={store._id}>\r\n                                {store.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            )}\r\n\r\n            {products.length === 0 ? (\r\n                <div className=\"text-center py-10\">\r\n                    <p className=\"text-slate-500\">No products found for this store</p>\r\n                </div>\r\n            ) : (\r\n                <table className=\"w-full max-w-4xl text-left ring ring-slate-200 rounded overflow-hidden text-sm\">\r\n                    <thead className=\"bg-slate-50 text-gray-700 uppercase tracking-wider\">\r\n                        <tr>\r\n                            <th className=\"px-4 py-3\">Name</th>\r\n                            <th className=\"px-4 py-3 hidden md:table-cell\">Description</th>\r\n                            <th className=\"px-4 py-3 hidden md:table-cell\">SKU</th>\r\n                            <th className=\"px-4 py-3\">Price</th>\r\n                            <th className=\"px-4 py-3\">Stock</th>\r\n                            <th className=\"px-4 py-3\">Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"text-slate-700\">\r\n                        {products.map((product) => (\r\n                            <tr key={product._id} className=\"border-t border-gray-200 hover:bg-gray-50\">\r\n                                <td className=\"px-4 py-3\">\r\n                                    <div className=\"flex gap-2 items-center\">\r\n                                        {product.images && product.images.length > 0 ? (\r\n                                            <Image \r\n                                                width={40} \r\n                                                height={40} \r\n                                                className='p-1 shadow rounded cursor-pointer' \r\n                                                src={product.images[0]} \r\n                                                alt={product.name}\r\n                                            />\r\n                                        ) : (\r\n                                            <div className=\"w-10 h-10 bg-slate-100 rounded flex items-center justify-center\">\r\n                                                <span className=\"text-xs\">No img</span>\r\n                                            </div>\r\n                                        )}\r\n                                        {product.name}\r\n                                    </div>\r\n                                </td>\r\n                                <td className=\"px-4 py-3 max-w-md text-slate-600 hidden md:table-cell truncate\">\r\n                                    {product.description || 'No description'}\r\n                                </td>\r\n                                <td className=\"px-4 py-3 hidden md:table-cell\">\r\n                                    {product.sku || 'N/A'}\r\n                                </td>\r\n                                <td className=\"px-4 py-3\">\r\n                                    {currency} {product.price.toLocaleString()}\r\n                                </td>\r\n                                <td className=\"px-4 py-3\">\r\n                                    <span className={`px-2 py-1 rounded text-xs ${\r\n                                        product.stock > 0 ? 'bg-green-100 text-green-700' : 'bg-red-100 text-red-700'\r\n                                    }`}>\r\n                                        {product.stock} in stock\r\n                                    </span>\r\n                                </td>\r\n                                <td className=\"px-4 py-3 text-center\">\r\n                                    <label className=\"relative inline-flex items-center cursor-pointer text-gray-900 gap-3\">\r\n                                        <input \r\n                                            type=\"checkbox\" \r\n                                            className=\"sr-only peer\" \r\n                                            onChange={() => toast.promise(toggleStock(product._id), { loading: \"Updating stock...\" })} \r\n                                            checked={product.stock > 0} \r\n                                        />\r\n                                        <div className=\"w-9 h-5 bg-slate-300 rounded-full peer peer-checked:bg-green-600 transition-colors duration-200\"></div>\r\n                                        <span className=\"dot absolute left-1 top-1 w-3 h-3 bg-white rounded-full transition-transform duration-200 ease-in-out peer-checked:translate-x-4\"></span>\r\n                                    </label>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}