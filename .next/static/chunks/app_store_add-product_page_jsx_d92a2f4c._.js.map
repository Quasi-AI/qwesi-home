{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/RextonItsiah/Documents/GitHub/Qwesi-latest/app/store/add-product/page.jsx"],"sourcesContent":["'use client'\r\nimport { assets } from \"@/assets/assets\"\r\nimport Image from \"next/image\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { toast } from \"react-hot-toast\"\r\n\r\nconst API_BASE_URL = 'https://dark-caldron-448714-u5.uc.r.appspot.com/api'\r\n\r\nexport default function StoreAddProduct() {\r\n\r\n    const [stores, setStores] = useState([])\r\n    const [selectedStore, setSelectedStore] = useState('')\r\n    const [images, setImages] = useState({ 1: null, 2: null, 3: null, 4: null })\r\n    const [productInfo, setProductInfo] = useState({\r\n        name: \"\",\r\n        description: \"\",\r\n        price: 0,\r\n        sku: \"\",\r\n        stock: 0,\r\n        currency: \"USD\",\r\n        attributes: {}\r\n    })\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const fetchStores = async () => {\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/stores`)\r\n            if (response.ok) {\r\n                const data = await response.json()\r\n                setStores(data)\r\n                if (data.length > 0) {\r\n                    setSelectedStore(data[0]._id)\r\n                }\r\n            } else {\r\n                throw new Error('Failed to fetch stores')\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching stores:', error)\r\n            toast.error('Failed to fetch stores')\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e) => {\r\n        setProductInfo({ ...productInfo, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const uploadImages = async () => {\r\n        const imageUrls = []\r\n        // In a real implementation, you would upload images to a cloud service like Cloudinary, AWS S3, etc.\r\n        // For now, we'll just return placeholder URLs\r\n        \r\n        for (let key of Object.keys(images)) {\r\n            if (images[key]) {\r\n                // Simulate image upload - replace with actual upload logic\r\n                const imageUrl = `https://via.placeholder.com/400x400?text=Product+Image+${key}`\r\n                imageUrls.push(imageUrl)\r\n            }\r\n        }\r\n        \r\n        return imageUrls\r\n    }\r\n\r\n    const onSubmitHandler = async (e) => {\r\n        e.preventDefault()\r\n        \r\n        if (!selectedStore) {\r\n            toast.error('Please select a store')\r\n            return\r\n        }\r\n\r\n        setLoading(true)\r\n        \r\n        try {\r\n            // Upload images first (in a real app, you'd upload to cloud storage)\r\n            const imageUrls = await uploadImages()\r\n\r\n            const productData = {\r\n                ...productInfo,\r\n                storeId: selectedStore,\r\n                price: parseFloat(productInfo.price),\r\n                stock: parseInt(productInfo.stock),\r\n                images: imageUrls,\r\n            }\r\n\r\n            const response = await fetch(`${API_BASE_URL}/stores/${selectedStore}/products`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(productData),\r\n            })\r\n\r\n            if (response.ok) {\r\n                const newProduct = await response.json()\r\n                \r\n                // Reset form\r\n                setProductInfo({\r\n                    name: \"\",\r\n                    description: \"\",\r\n                    price: 0,\r\n                    sku: \"\",\r\n                    stock: 0,\r\n                    currency: \"USD\",\r\n                    attributes: {}\r\n                })\r\n                setImages({ 1: null, 2: null, 3: null, 4: null })\r\n                \r\n                toast.success('Product added successfully!')\r\n            } else {\r\n                const errorData = await response.json()\r\n                throw new Error(errorData.message || 'Failed to add product')\r\n            }\r\n        } catch (error) {\r\n            console.error('Error adding product:', error)\r\n            toast.error(error.message || 'Failed to add product')\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchStores()\r\n    }, [])\r\n\r\n    return (\r\n        <form onSubmit={e => toast.promise(onSubmitHandler(e), { loading: \"Adding Product...\" })} className=\"text-slate-500 mb-28\">\r\n            <h1 className=\"text-2xl\">Add New <span className=\"text-slate-800 font-medium\">Products</span></h1>\r\n            \r\n            {/* Store Selection */}\r\n            {stores.length > 1 && (\r\n                <div className=\"my-6\">\r\n                    <label className=\"block text-sm font-medium text-slate-700 mb-2\">Select Store *</label>\r\n                    <select\r\n                        value={selectedStore}\r\n                        onChange={(e) => setSelectedStore(e.target.value)}\r\n                        className=\"w-full max-w-sm p-2 px-4 outline-none border border-slate-200 rounded\"\r\n                        required\r\n                    >\r\n                        <option value=\"\">Select a store</option>\r\n                        {stores.map((store) => (\r\n                            <option key={store._id} value={store._id}>\r\n                                {store.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            )}\r\n\r\n            <p className=\"mt-7\">Product Images</p>\r\n\r\n            <div className=\"flex gap-3 mt-4\">\r\n                {Object.keys(images).map((key) => (\r\n                    <label key={key} htmlFor={`images${key}`}>\r\n                        <Image \r\n                            width={300} \r\n                            height={300} \r\n                            className='h-15 w-auto border border-slate-200 rounded cursor-pointer' \r\n                            src={images[key] ? URL.createObjectURL(images[key]) : assets.upload_area} \r\n                            alt=\"\" \r\n                        />\r\n                        <input \r\n                            type=\"file\" \r\n                            accept='image/*' \r\n                            id={`images${key}`} \r\n                            onChange={e => setImages({ ...images, [key]: e.target.files[0] })} \r\n                            hidden \r\n                        />\r\n                    </label>\r\n                ))}\r\n            </div>\r\n\r\n            <label className=\"flex flex-col gap-2 my-6\">\r\n                Name *\r\n                <input \r\n                    type=\"text\" \r\n                    name=\"name\" \r\n                    onChange={onChangeHandler} \r\n                    value={productInfo.name} \r\n                    placeholder=\"Enter product name\" \r\n                    className=\"w-full max-w-sm p-2 px-4 outline-none border border-slate-200 rounded\" \r\n                    required \r\n                />\r\n            </label>\r\n\r\n            <label className=\"flex flex-col gap-2 my-6\">\r\n                Description *\r\n                <textarea \r\n                    name=\"description\" \r\n                    onChange={onChangeHandler} \r\n                    value={productInfo.description} \r\n                    placeholder=\"Enter product description\" \r\n                    rows={5} \r\n                    className=\"w-full max-w-sm p-2 px-4 outline-none border border-slate-200 rounded resize-none\" \r\n                    required \r\n                />\r\n            </label>\r\n\r\n            <label className=\"flex flex-col gap-2 my-6\">\r\n                SKU (Optional)\r\n                <input \r\n                    type=\"text\" \r\n                    name=\"sku\" \r\n                    onChange={onChangeHandler} \r\n                    value={productInfo.sku} \r\n                    placeholder=\"Enter product SKU\" \r\n                    className=\"w-full max-w-sm p-2 px-4 outline-none border border-slate-200 rounded\" \r\n                />\r\n            </label>\r\n\r\n            <div className=\"flex gap-5\">\r\n                <label className=\"flex flex-col gap-2\">\r\n                    Price ($) *\r\n                    <input \r\n                        type=\"number\" \r\n                        name=\"price\" \r\n                        onChange={onChangeHandler} \r\n                        value={productInfo.price} \r\n                        placeholder=\"0.00\" \r\n                        min=\"0\" \r\n                        step=\"0.01\"\r\n                        className=\"w-full max-w-45 p-2 px-4 outline-none border border-slate-200 rounded\" \r\n                        required \r\n                    />\r\n                </label>\r\n                <label className=\"flex flex-col gap-2\">\r\n                    Stock Quantity *\r\n                    <input \r\n                        type=\"number\" \r\n                        name=\"stock\" \r\n                        onChange={onChangeHandler} \r\n                        value={productInfo.stock} \r\n                        placeholder=\"0\" \r\n                        min=\"0\"\r\n                        className=\"w-full max-w-45 p-2 px-4 outline-none border border-slate-200 rounded\" \r\n                        required \r\n                    />\r\n                </label>\r\n            </div>\r\n\r\n            <label className=\"flex flex-col gap-2 my-6\">\r\n                Currency\r\n                <select\r\n                    name=\"currency\"\r\n                    onChange={onChangeHandler}\r\n                    value={productInfo.currency}\r\n                    className=\"w-full max-w-sm p-2 px-4 outline-none border border-slate-200 rounded\"\r\n                >\r\n                    <option value=\"USD\">USD ($)</option>\r\n                    <option value=\"EUR\">EUR (€)</option>\r\n                    <option value=\"GBP\">GBP (£)</option>\r\n                    <option value=\"CAD\">CAD (C$)</option>\r\n                </select>\r\n            </label>\r\n\r\n            <button \r\n                disabled={loading || !selectedStore} \r\n                className=\"bg-slate-800 text-white px-6 mt-7 py-2 hover:bg-slate-900 rounded transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n                {loading ? 'Adding Product...' : 'Add Product'}\r\n            </button>\r\n        </form>\r\n    )\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}