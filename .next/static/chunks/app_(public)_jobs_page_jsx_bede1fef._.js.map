{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/RextonItsiah/Documents/GitHub/Qwesi-latest/app/%28public%29/jobs/page.jsx"],"sourcesContent":["'use client'\nimport React, { useState, useEffect, useMemo, useRef } from 'react'\nimport { \n  Search, Filter, MapPin, Building, Zap, Clock, ChevronRight, \n  ChevronLeft, X, Briefcase, ArrowRight, Heart, User, FileText, \n  Upload, Plus, MessageSquare, Send, Globe, Loader2, ExternalLink,\n  Building2, Users, DollarSign, Calendar, Target, Award, Star\n} from 'lucide-react'\nimport toast from 'react-hot-toast'\nimport Link from 'next/link'\nimport { API_ROUTES } from '@/lib/apiRoutes'\n\nconst JobsPage = () => {\n  // State management\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n  const [jobs, setJobs] = useState([])\n  const [selectedJob, setSelectedJob] = useState(null)\n  const [viewingJob, setViewingJob] = useState(null)\n  const [searchQuery, setSearchQuery] = useState('')\n  const [showFilters, setShowFilters] = useState(false)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [jobsPerPage] = useState(12)\n  const [sortBy, setSortBy] = useState('newest')\n  const [savedJobs, setSavedJobs] = useState([])\n  const [userApplications, setUserApplications] = useState([])\n  const [searchLoading, setSearchLoading] = useState(false)\n  const [applicationErrors, setApplicationErrors] = useState({})\n\n  // Filter states\n  const [filters, setFilters] = useState({\n    location: '',\n    country: '',\n    sector: '',\n    experience_level: '',\n    salary_range: ''\n  })\n\n  // Application form states\n  const [showApplicationModal, setShowApplicationModal] = useState(false)\n  const [applicationLoading, setApplicationLoading] = useState(false)\n\n\n  // Add state for file handling\n  const [resumeFile, setResumeFile] = useState(null)\n  const fileInputRef = useRef(null)\n\n  // Add file handling functions\n  const handleFileUpload = (event) => {\n    const target = event.target\n    const file = target.files?.[0]\n    \n    if (file) {\n      // Validate file type\n      const allowedTypes = ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document']\n      if (!allowedTypes.includes(file.type)) {\n        toast.error('Please upload a PDF, DOC, or DOCX file')\n        return\n      }\n      \n      // Validate file size (5MB limit)\n      if (file.size > 5 * 1024 * 1024) {\n        toast.error('File size must be less than 5MB')\n        return\n      }\n      \n      setResumeFile(file)\n      // Clear any previous resume errors\n      setApplicationErrors(prev => ({ ...prev, resume: '' }))\n      toast.success('Resume uploaded successfully')\n    }\n  }\n\n  const removeFile = () => {\n    setResumeFile(null)\n    if (fileInputRef.current) {\n      fileInputRef.current.value = ''\n    }\n  }\n\n  // Add these state variables for the comprehensive form\n  const [applicationForm, setApplicationForm] = useState({\n    jobId: '',\n    applicantDetails: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      address: '',\n      linkedin: '',\n      portfolio: ''\n    },\n    coverLetter: '',\n    skills: [],\n    experience: {\n      years: 0,\n      description: ''\n    }\n  })\n  const [newSkill, setNewSkill] = useState('')\n\n  // Helper function to extract country from location\n  const extractCountryFromLocation = (location) => {\n    if (!location) return ''\n    \n    const countryPatterns = [\n      'Ghana', 'Nigeria', 'Kenya', 'South Africa', 'Egypt', 'Morocco', 'Tunisia',\n      'Ethiopia', 'Uganda', 'Tanzania', 'Rwanda', 'Botswana', 'Zambia', 'Zimbabwe',\n      'United Kingdom', 'UK', 'Germany', 'France', 'Spain', 'Italy', 'Netherlands',\n      'United States', 'USA', 'US', 'Canada', 'Mexico', 'India', 'China', 'Japan'\n    ]\n    \n    for (const country of countryPatterns) {\n      if (location.toLowerCase().includes(country.toLowerCase())) {\n        if (country.toLowerCase() === 'uk') return 'United Kingdom'\n        if (country.toLowerCase() === 'usa' || country.toLowerCase() === 'us') return 'United States'\n        return country\n      }\n    }\n    \n    const parts = location.split(',').map(part => part.trim())\n    return parts.length >= 2 ? parts[parts.length - 1] : ''\n  }\n\n  // Computed values\n  const uniqueLocations = useMemo(() => {\n    if (!Array.isArray(jobs)) return []\n    const locations = jobs.map(job => job.location).filter(Boolean)\n    return [...new Set(locations)].sort()\n  }, [jobs])\n\n  const uniqueCountries = useMemo(() => {\n    if (!Array.isArray(jobs)) return []\n    const countries = jobs.map(job => extractCountryFromLocation(job.location || '')).filter(Boolean)\n    return [...new Set(countries)].sort()\n  }, [jobs])\n\n  const uniqueSectors = useMemo(() => {\n    if (!Array.isArray(jobs)) return []\n    const sectors = jobs.map(job => job.sector).filter(Boolean)\n    return [...new Set(sectors)].sort()\n  }, [jobs])\n\n  const uniqueExperienceLevels = useMemo(() => {\n    if (!Array.isArray(jobs)) return []\n    const levels = jobs.map(job => job.experience_level).filter(Boolean)\n    return [...new Set(levels)].sort((a, b) => {\n      const order = ['Entry Level', 'Mid Level', 'Senior Level', 'Executive']\n      return order.indexOf(a) - order.indexOf(b)\n    })\n  }, [jobs])\n\n  const filteredJobs = useMemo(() => {\n    if (!Array.isArray(jobs)) return []\n    let filtered = jobs\n\n    if (searchQuery) {\n      const query = searchQuery.toLowerCase()\n      filtered = filtered.filter(job =>\n        (job.title?.toLowerCase() || '').includes(query) ||\n        (job.employer?.toLowerCase() || '').includes(query) ||\n        (job.job_description?.toLowerCase() || '').includes(query) ||\n        (job.location?.toLowerCase() || '').includes(query) ||\n        (job.sector?.toLowerCase() || '').includes(query)\n      )\n    }\n\n    if (filters.country) {\n      filtered = filtered.filter(job => {\n        const jobCountry = extractCountryFromLocation(job.location || '')\n        return jobCountry === filters.country\n      })\n    }\n\n    if (filters.location) {\n      filtered = filtered.filter(job => job.location === filters.location)\n    }\n    if (filters.sector) {\n      filtered = filtered.filter(job => job.sector === filters.sector)\n    }\n    if (filters.experience_level) {\n      filtered = filtered.filter(job => job.experience_level === filters.experience_level)\n    }\n\n    // Sort jobs\n    filtered.sort((a, b) => {\n      switch (sortBy) {\n        case 'newest':\n          return new Date(b.created_at || '').getTime() - new Date(a.created_at || '').getTime()\n        case 'oldest':\n          return new Date(a.created_at || '').getTime() - new Date(b.created_at || '').getTime()\n        case 'title':\n          return (a.title || '').localeCompare(b.title || '')\n        case 'company':\n          return (a.employer || '').localeCompare(b.employer || '')\n        default:\n          return 0\n      }\n    })\n\n    return filtered\n  }, [jobs, searchQuery, filters, sortBy])\n\n  const totalPages = Math.max(1, Math.ceil(filteredJobs.length / jobsPerPage))\n  \n  const paginatedJobs = useMemo(() => {\n    const start = (currentPage - 1) * jobsPerPage\n    const end = start + jobsPerPage\n    return filteredJobs.slice(start, end)\n  }, [filteredJobs, currentPage, jobsPerPage])\n\n  // API functions\n  const fetchJobs = async () => {\n    setLoading(true)\n    setError(null)\n    \n    try {\n      // Build query parameters\n      const queryParams = new URLSearchParams()\n      \n      if (searchQuery) queryParams.append('search', searchQuery)\n      if (filters.location) queryParams.append('location', filters.location)\n      if (filters.country) queryParams.append('country', filters.country)\n      if (filters.sector) queryParams.append('sector', filters.sector)\n      if (filters.experience_level) queryParams.append('experience_level', filters.experience_level)\n      if (filters.salary_range) queryParams.append('salary_range', filters.salary_range)\n      if (sortBy) queryParams.append('sortBy', sortBy)\n      queryParams.append('page', currentPage.toString())\n      queryParams.append('limit', jobsPerPage.toString())\n      \n      const url = `${API_ROUTES.BASE_URL}getjobs${queryParams.toString() ? '?' + queryParams.toString() : ''}`\n      \n      const response = await fetch(url)\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`)\n      }\n      \n      const data = await response.json()\n\n      setJobs(data.data || [])\n      \n    } catch (err) {\n      console.error('Error fetching jobs:', err)\n      setError(err.message || 'Failed to fetch jobs')\n      toast.error('Failed to load job opportunities')\n    } finally {\n      setLoading(false)\n      setSearchLoading(false)\n    }\n  }\n\n  // Event handlers\n  const handleSearch = () => {\n    setSearchLoading(true)\n    setCurrentPage(1)\n    fetchJobs()\n  }\n\n  const clearFilters = () => {\n    setFilters({\n      location: '',\n      country: '',\n      sector: '',\n      experience_level: '',\n      salary_range: ''\n    })\n    setCurrentPage(1)\n  }\n\n  const clearAllFilters = () => {\n    setSearchQuery('')\n    clearFilters()\n  }\n\n  const saveJob = (job) => {\n    const index = savedJobs.indexOf(job._id)\n    if (index > -1) {\n      setSavedJobs(prev => prev.filter(id => id !== job._id))\n      toast.success('Job removed from saved')\n    } else {\n      setSavedJobs(prev => [...prev, job._id])\n      toast.success('Job saved successfully')\n    }\n  }\n\n  const openJobDetailsModal = (job) => {\n    setViewingJob(job)\n  }\n\n  const closeJobDetailsModal = () => {\n    setViewingJob(null)\n  }\n\n  const openApplicationModal = (job) => {\n    const authRaw = localStorage.getItem('auth')\n    const auth = authRaw ? JSON.parse(authRaw) : null\n    if (!auth?.token) {\n      // trigger navbar to open login\n      if (typeof window !== 'undefined') window.dispatchEvent(new Event('auth:open-login'))\n      return\n    }\n    setSelectedJob(job)\n    \n    // Set the jobId in the form\n    setApplicationForm(prev => ({\n      ...prev,\n      jobId: job._id\n    }))\n    \n    setShowApplicationModal(true)\n  }\n\n  const closeApplicationModal = () => {\n    setShowApplicationModal(false)\n    setSelectedJob(null)\n  }\n\n  const applyToJob = (job) => {\n    openApplicationModal(job)\n  }\n\n  // Add proper form validation similar to your Vue composable\n  const validateApplicationForm = (formData, resumeFile) => {\n    const errors = {}\n    \n    // Validate required fields using applicationForm state instead of FormData\n    if (!applicationForm.applicantDetails.firstName?.trim()) {\n      errors.firstName = 'First name is required'\n    }\n\n    if (!applicationForm.applicantDetails.lastName?.trim()) {\n      errors.lastName = 'Last name is required'\n    }\n\n    if (!applicationForm.applicantDetails.email?.trim()) {\n      errors.email = 'Email is required'\n    } else if (!/\\S+@\\S+\\.\\S+/.test(applicationForm.applicantDetails.email)) {\n      errors.email = 'Please enter a valid email'\n    }\n\n    if (!applicationForm.applicantDetails.phone?.trim()) {\n      errors.phone = 'Phone number is required'\n    }\n\n    // Validate resume file\n    if (!resumeFile) {\n      errors.resume = 'Resume is required'\n    } else {\n      const allowedTypes = ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document']\n      if (!allowedTypes.includes(resumeFile.type)) {\n        errors.resume = 'Please upload a PDF, DOC, or DOCX file'\n      }\n\n      if (resumeFile.size > 5 * 1024 * 1024) {\n        errors.resume = 'File size must be less than 5MB'\n      }\n    }\n\n    return {\n      isValid: Object.keys(errors).length === 0,\n      errors\n    }\n  }\n\n  const submitApplication = async (e) => {\n    e.preventDefault()\n    \n    const validation = validateApplicationForm(null, resumeFile)\n    \n    if (!validation.isValid) {\n      setApplicationErrors(validation.errors)\n      toast.error('Please correct the errors in the form')\n      return\n    }\n\n    setApplicationLoading(true)\n    setApplicationErrors({})\n\n    try {\n      // Get auth token from localStorage\n      const authRaw = localStorage.getItem('auth')\n      const auth = authRaw ? JSON.parse(authRaw) : null\n      const token = auth?.token\n\n      // Create FormData for API submission\n      const applicationData = new FormData()\n      applicationData.append('jobId', selectedJob._id) // Use selectedJob._id directly\n      applicationData.append('applicantDetails', JSON.stringify(applicationForm.applicantDetails))\n      applicationData.append('coverLetter', applicationForm.coverLetter || '')\n      applicationData.append('skills', JSON.stringify(applicationForm.skills))\n      applicationData.append('experience', JSON.stringify(applicationForm.experience))\n      \n      if (resumeFile) {\n        applicationData.append('resume', resumeFile)\n      }\n      \n      // Make actual API call\n      const response = await fetch(`${API_ROUTES.BASE_URL}/applications/submit`, {\n        method: 'POST',\n        headers: {\n          ...(token && { 'Authorization': `Bearer ${token}` })\n        },\n        body: applicationData\n      })\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`)\n      }\n\n      const result = await response.json()\n      \n      if (result.success) {\n        toast.success('Application submitted successfully!')\n        closeApplicationModal()\n        resetApplicationForm()\n      } else {\n        throw new Error(result.message || 'Failed to submit application')\n      }\n      \n    } catch (error) {\n      console.error('Application error:', error)\n      toast.error('Failed to submit application. Please try again.')\n    } finally {\n      setApplicationLoading(false)\n    }\n  }\n\n  const formatDate = (dateString) => {\n    if (!dateString) return ''\n    \n    try {\n      const date = new Date(dateString)\n      const now = new Date()\n      const diffTime = Math.abs(now.getTime() - date.getTime())\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24))\n      \n      if (diffDays === 1) return 'yesterday'\n      if (diffDays < 7) return `${diffDays} days ago`\n      if (diffDays < 30) return `${Math.ceil(diffDays / 7)} weeks ago`\n      if (diffDays < 365) return `${Math.ceil(diffDays / 30)} months ago`\n      \n      return date.toLocaleDateString()\n    } catch {\n      return dateString\n    }\n  }\n\n  const getExperienceColor = (level) => {\n    switch (level) {\n      case 'Entry Level': return 'bg-green-100 text-green-800'\n      case 'Mid Level': return 'bg-blue-100 text-blue-800'\n      case 'Senior Level': return 'bg-purple-100 text-purple-800'\n      default: return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  // Add helper functions\n  const addSkill = () => {\n    if (newSkill.trim() && !applicationForm.skills.includes(newSkill.trim())) {\n      setApplicationForm(prev => ({\n        ...prev,\n        skills: [...prev.skills, newSkill.trim()]\n      }))\n      setNewSkill('')\n    }\n  }\n\n  const removeSkill = (index) => {\n    setApplicationForm(prev => ({\n      ...prev,\n      skills: prev.skills.filter((_, i) => i !== index)\n    }))\n  }\n\n  const resetApplicationForm = () => {\n    setApplicationForm({\n      jobId: '',\n      applicantDetails: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        phone: '',\n        address: '',\n        linkedin: '',\n        portfolio: ''\n      },\n      coverLetter: '',\n      skills: [],\n      experience: {\n        years: 0,\n        description: ''\n      }\n    })\n    setResumeFile(null)\n    setNewSkill('')\n    setApplicationErrors({})\n    if (fileInputRef.current) {\n      fileInputRef.current.value = ''\n    }\n  }\n\n  // Effects\n  useEffect(() => {\n    fetchJobs()\n  }, [])\n\n  useEffect(() => {\n    if (currentPage > totalPages) {\n      setCurrentPage(Math.max(1, totalPages))\n    }\n  }, [filteredJobs.length, totalPages, currentPage])\n\n  // Skeleton Loader Component\n  const JobCardSkeleton = () => (\n    <div className=\"bg-white border border-gray-200 rounded-2xl p-6 animate-pulse\">\n      <div className=\"flex items-start justify-between mb-4\">\n        <div className=\"flex-1 space-y-2\">\n          <div className=\"h-6 bg-gray-200 rounded w-3/4\"></div>\n          <div className=\"h-4 bg-gray-200 rounded w-1/2\"></div>\n        </div>\n        <div className=\"h-6 bg-gray-200 rounded w-20\"></div>\n      </div>\n      <div className=\"space-y-3 mb-4\">\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"h-4 bg-gray-200 rounded w-4\"></div>\n          <div className=\"h-4 bg-gray-200 rounded w-32\"></div>\n        </div>\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"h-4 bg-gray-200 rounded w-4\"></div>\n          <div className=\"h-4 bg-gray-200 rounded w-24\"></div>\n        </div>\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"h-4 bg-gray-200 rounded w-4\"></div>\n          <div className=\"h-4 bg-gray-200 rounded w-28\"></div>\n        </div>\n      </div>\n      <div className=\"h-12 bg-gray-200 rounded mb-4\"></div>\n      <div className=\"flex justify-between items-center\">\n        <div className=\"h-4 bg-gray-200 rounded w-20\"></div>\n        <div className=\"flex space-x-2\">\n          <div className=\"h-8 bg-gray-200 rounded w-8\"></div>\n          <div className=\"h-8 bg-gray-200 rounded w-20\"></div>\n        </div>\n      </div>\n    </div>\n  )\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Hero Section */}\n      <div className=\"bg-gradient-to-br from-[#5C3AEB] via-[#5E43D7] to-[#7A59D7] text-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n          <div className=\"text-center\">\n            <h1 className=\"text-4xl md:text-5xl font-bold mb-4\">\n              Find Your Dream Job\n            </h1>\n            <p className=\"text-xl opacity-90 mb-8 max-w-2xl mx-auto\">\n              Discover thousands of career opportunities from top companies worldwide. \n              Your next career move starts here.\n            </p>\n            \n            {/* Search Bar */}\n            <div className=\"max-w-2xl mx-auto\">\n              <div className=\"relative\">\n                <input\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  onKeyPress={(e) => e.key === 'Enter' && handleSearch()}\n                  type=\"text\"\n                  placeholder=\"Job title, company, or keywords...\"\n                  className=\"w-full pl-12 pr-32 py-4 bg-white/10 backdrop-blur-lg border border-white/20 rounded-2xl text-white placeholder-white/70 focus:outline-none focus:ring-2 focus:ring-white/50 text-lg\"\n                />\n                <Search className=\"absolute left-4 top-1/2 transform -translate-y-1/2 w-5 h-5 text-white/70\" />\n                <button\n                  onClick={handleSearch}\n                  disabled={searchLoading}\n                  className=\"absolute right-2 top-1/2 transform -translate-y-1/2 bg-white text-[#5C3AEB] px-6 py-2 rounded-xl font-semibold hover:bg-gray-100 disabled:opacity-50 transition-colors\"\n                >\n                  {searchLoading ? 'Searching...' : 'Search'}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Compact Categories Navigation */}\n      <div className=\"bg-white border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\n          <div className=\"flex items-center justify-between mb-3\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Browse Categories</h3>\n            <Link href=\"/categories\" className=\"text-sm text-[#432DD7] hover:text-[#3525b8] font-medium\">\n              View All Categories →\n            </Link>\n          </div>\n          \n          <div className=\"flex overflow-x-auto pb-2 gap-3 scrollbar-hide\">\n            {[\n              { id: 'vehicles', name: '🚗 Vehicles', count: '12K+' },\n              { id: 'electronics', name: '📱 Electronics', count: '15K+' },\n              { id: 'property', name: '🏠 Property', count: '8K+' },\n              { id: 'fashion', name: '👕 Fashion', count: '7K+' },\n              { id: 'jobs', name: '💼 Jobs', count: '5K+' },\n              { id: 'services', name: '🔧 Services', count: '4K+' },\n              { id: 'furniture', name: '🛋️ Home', count: '6K+' },\n              { id: 'pets', name: '🐾 Pets', count: '3K+' },\n              { id: 'baby-kids', name: '🍼 Baby & Kids', count: '3K+' },\n              { id: 'sports', name: '⚽ Sports', count: '2K+' }\n            ].map((cat) => (\n              <Link\n                key={cat.id}\n                href={`/shop?category=${cat.id}`}\n                className=\"flex-shrink-0 flex items-center gap-2 px-4 py-2 bg-gray-50 hover:bg-[#432DD7] hover:text-white rounded-lg border border-gray-200 hover:border-[#432DD7] transition-all text-sm font-medium whitespace-nowrap\"\n              >\n                <span>{cat.name}</span>\n                <span className=\"text-xs opacity-75\">{cat.count}</span>\n              </Link>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Quick Stats */}\n      <div className=\"bg-white border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6\">\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-[#5C3AEB]\">{jobs.length}+</div>\n              <div className=\"text-sm text-gray-600\">Active Jobs</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-[#5C3AEB]\">50+</div>\n              <div className=\"text-sm text-gray-600\">Companies</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-[#5C3AEB]\">15+</div>\n              <div className=\"text-sm text-gray-600\">Countries</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-[#5C3AEB]\">24/7</div>\n              <div className=\"text-sm text-gray-600\">Support</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Filters Bar */}\n        <div className=\"bg-white rounded-2xl border border-gray-200 p-6 mb-8\">\n          <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4\">\n            <div className=\"flex items-center gap-4\">\n              <button\n                onClick={() => setShowFilters(!showFilters)}\n                className={`flex items-center gap-2 px-4 py-2 rounded-xl font-semibold transition-colors ${\n                  showFilters \n                    ? 'bg-[#5C3AEB] text-white' \n                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                }`}\n              >\n                <Filter className=\"w-4 h-4\" />\n                Filters\n              </button>\n              \n              <div className=\"hidden md:flex items-center gap-2\">\n                <span className=\"text-sm text-gray-600\">Sort by:</span>\n                <select \n                  value={sortBy} \n                  onChange={(e) => setSortBy(e.target.value)}\n                  className=\"bg-white border border-gray-300 rounded-lg px-3 py-1 text-sm focus:outline-none focus:ring-2 focus:ring-[#5C3AEB]\"\n                >\n                  <option value=\"newest\">Newest First</option>\n                  <option value=\"oldest\">Oldest First</option>\n                  <option value=\"title\">Job Title A-Z</option>\n                  <option value=\"company\">Company A-Z</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"text-sm text-gray-600\">\n              Showing {filteredJobs.length} of {jobs.length} jobs\n            </div>\n          </div>\n\n          {/* Expanded Filters */}\n          {showFilters && (\n            <div className=\"mt-6 pt-6 border-t border-gray-200\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\n                {/* Country */}\n                <div>\n                  <label className=\"block text-sm font-semibold text-gray-700 mb-2\">Country</label>\n                  <select \n                    value={filters.country} \n                    onChange={(e) => setFilters(prev => ({ ...prev, country: e.target.value }))}\n                    className=\"w-full border border-gray-300 rounded-lg px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-[#5C3AEB]\"\n                  >\n                    <option value=\"\">All Countries</option>\n                    {uniqueCountries.map(country => (\n                      <option key={country} value={country}>{country}</option>\n                    ))}\n                  </select>\n                </div>\n\n                {/* Location */}\n                <div>\n                  <label className=\"block text-sm font-semibold text-gray-700 mb-2\">Location</label>\n                  <select \n                    value={filters.location} \n                    onChange={(e) => setFilters(prev => ({ ...prev, location: e.target.value }))}\n                    className=\"w-full border border-gray-300 rounded-lg px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-[#5C3AEB]\"\n                  >\n                    <option value=\"\">All Locations</option>\n                    {uniqueLocations.map(location => (\n                      <option key={location} value={location}>{location}</option>\n                    ))}\n                  </select>\n                </div>\n\n                {/* Sector */}\n                <div>\n                  <label className=\"block text-sm font-semibold text-gray-700 mb-2\">Sector</label>\n                  <select \n                    value={filters.sector} \n                    onChange={(e) => setFilters(prev => ({ ...prev, sector: e.target.value }))}\n                    className=\"w-full border border-gray-300 rounded-lg px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-[#5C3AEB]\"\n                  >\n                    <option value=\"\">All Sectors</option>\n                    {uniqueSectors.map(sector => (\n                      <option key={sector} value={sector}>{sector}</option>\n                    ))}\n                  </select>\n                </div>\n\n                {/* Experience */}\n                <div>\n                  <label className=\"block text-sm font-semibold text-gray-700 mb-2\">Experience</label>\n                  <select \n                    value={filters.experience_level} \n                    onChange={(e) => setFilters(prev => ({ ...prev, experience_level: e.target.value }))}\n                    className=\"w-full border border-gray-300 rounded-lg px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-[#5C3AEB]\"\n                  >\n                    <option value=\"\">All Levels</option>\n                    {uniqueExperienceLevels.map(level => (\n                      <option key={level} value={level}>{level}</option>\n                    ))}\n                  </select>\n                </div>\n\n                {/* Actions */}\n                <div className=\"flex items-end gap-2\">\n                  <button\n                    onClick={clearFilters}\n                    className=\"flex-1 px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors text-sm font-semibold\"\n                  >\n                    Clear\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Loading State */}\n        {loading && (\n          <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n            {Array.from({ length: 6 }).map((_, i) => (\n              <JobCardSkeleton key={i} />\n            ))}\n          </div>\n        )}\n\n        {/* Error State */}\n        {error && !loading && (\n          <div className=\"text-center py-12\">\n            <div className=\"bg-red-50 border border-red-200 rounded-2xl p-8 max-w-md mx-auto\">\n              <X className=\"w-12 h-12 text-red-500 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-bold text-red-700 mb-2\">Failed to Load Jobs</h3>\n              <p className=\"text-red-600 mb-4\">{error}</p>\n              <button\n                onClick={fetchJobs}\n                className=\"px-6 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors\"\n              >\n                Try Again\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Empty State */}\n        {!loading && !error && filteredJobs.length === 0 && (\n          <div className=\"text-center py-12\">\n            <Briefcase className=\"w-24 h-24 text-gray-300 mx-auto mb-4\" />\n            <h3 className=\"text-xl font-bold text-gray-900 mb-2\">No Jobs Found</h3>\n            <p className=\"text-gray-600 mb-6\">\n              {searchQuery || Object.values(filters).some(f => f) \n                ? 'Try adjusting your search criteria or filters' \n                : 'No job listings available at the moment'}\n            </p>\n            {(searchQuery || Object.values(filters).some(f => f)) && (\n              <button\n                onClick={clearAllFilters}\n                className=\"px-6 py-2 bg-[#5C3AEB] text-white rounded-lg hover:bg-[#342299] transition-colors\"\n              >\n                Clear All Filters\n              </button>\n            )}\n          </div>\n        )}\n\n        {/* Jobs Grid */}\n        {!loading && !error && filteredJobs.length > 0 && (\n          <>\n            <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n              {paginatedJobs.map(job => (\n                <div key={job._id} className=\"group bg-white border border-gray-200 rounded-2xl p-6 hover:border-[#5C3AEB] hover:shadow-lg transition-all duration-300\">\n                  \n                  {/* Job Header */}\n                  <div className=\"flex items-start justify-between mb-4\">\n                    <div className=\"flex-1 min-w-0\">\n                      <h3 className=\"text-lg font-bold text-gray-900 mb-1 group-hover:text-[#5C3AEB] transition-colors line-clamp-2\">\n                        {job.title}\n                      </h3>\n                      <p className=\"text-[#5C3AEB] font-semibold truncate\">{job.employer}</p>\n                    </div>\n                    <button\n                      onClick={() => saveJob(job)}\n                      className={`p-2 rounded-lg transition-colors ${\n                        savedJobs.includes(job._id) \n                          ? 'text-red-500 bg-red-50' \n                          : 'text-gray-400 hover:text-red-500 hover:bg-gray-50'\n                      }`}\n                    >\n                      <Heart \n                        fill={savedJobs.includes(job._id) ? 'currentColor' : 'none'} \n                        className=\"w-4 h-4\" \n                      />\n                    </button>\n                  </div>\n\n                  {/* Job Details */}\n                  <div className=\"space-y-3 mb-4\">\n                    <div className=\"flex items-center text-sm text-gray-600\">\n                      <MapPin className=\"w-4 h-4 mr-2 flex-shrink-0\" />\n                      <span className=\"truncate\">{job.location}</span>\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-600\">\n                      <Building className=\"w-4 h-4 mr-2 flex-shrink-0\" />\n                      <span className=\"truncate\">{job.sector}</span>\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-600\">\n                      <Target className=\"w-4 h-4 mr-2 flex-shrink-0\" />\n                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${getExperienceColor(job.experience_level)}`}>\n                        {job.experience_level}\n                      </span>\n                    </div>\n                    {job.salary && (\n                      <div className=\"flex items-center text-sm text-gray-600\">\n                        <DollarSign className=\"w-4 h-4 mr-2 flex-shrink-0\" />\n                        <span className=\"font-semibold text-green-600\">{job.salary}</span>\n                      </div>\n                    )}\n                  </div>\n\n                  {/* Job Description Preview */}\n                  <div className=\"mb-4\">\n                    <p className=\"text-sm text-gray-600 line-clamp-3 leading-relaxed\">\n                      {job.job_description}\n                    </p>\n                  </div>\n\n                  {/* Posted Date */}\n                  <div className=\"flex items-center text-xs text-gray-500 mb-4\">\n                    <Clock className=\"w-3 h-3 mr-1\" />\n                    Posted {formatDate(job.posted)}\n                  </div>\n\n                  {/* Actions */}\n                  <div className=\"flex items-center justify-between\">\n                    <button\n                      onClick={() => openJobDetailsModal(job)}\n                      className=\"text-sm font-semibold text-[#5C3AEB] hover:text-[#342299] transition-colors flex items-center gap-1\"\n                    >\n                      View Details\n                      <ArrowRight className=\"w-3 h-3\" />\n                    </button>\n                    \n                    <button\n                      onClick={() => applyToJob(job)}\n                      className=\"px-4 py-2 bg-[#5C3AEB] text-white text-sm font-semibold rounded-lg hover:bg-[#342299] transition-colors\"\n                    >\n                      Apply Now\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {/* Pagination */}\n            {totalPages > 1 && (\n              <div className=\"flex items-center justify-between mt-8\">\n                <div className=\"text-sm text-gray-600\">\n                  Page {currentPage} of {totalPages}\n                </div>\n                \n                <div className=\"flex items-center gap-2\">\n                  <button\n                    onClick={() => setCurrentPage(prev => Math.max(1, prev - 1))}\n                    disabled={currentPage === 1}\n                    className=\"flex items-center gap-2 px-3 py-2 text-sm text-gray-600 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    <ChevronLeft className=\"w-4 h-4\" />\n                    Previous\n                  </button>\n                  \n                  <div className=\"flex gap-1\">\n                    {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {\n                      const page = currentPage <= 3 ? i + 1 : \n                                 currentPage >= totalPages - 2 ? totalPages - 4 + i :\n                                 currentPage - 2 + i\n                      return page > 0 && page <= totalPages ? (\n                        <button\n                          key={page}\n                          onClick={() => setCurrentPage(page)}\n                          className={`px-3 py-2 text-sm rounded-lg transition-colors ${\n                            page === currentPage\n                              ? 'bg-[#5C3AEB] text-white'\n                              : 'bg-white border border-gray-300 text-gray-600 hover:bg-gray-50'\n                          }`}\n                        >\n                          {page}\n                        </button>\n                      ) : null\n                    })}\n                  </div>\n                  \n                  <button\n                    onClick={() => setCurrentPage(prev => Math.min(totalPages, prev + 1))}\n                    disabled={currentPage === totalPages}\n                    className=\"flex items-center gap-2 px-3 py-2 text-sm text-gray-600 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    Next\n                    <ChevronRight className=\"w-4 h-4\" />\n                  </button>\n                </div>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n\n      {/* Job Details Modal */}\n      {viewingJob && (\n        <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-2xl max-w-4xl w-full max-h-[90vh] overflow-hidden\">\n            <div className=\"p-6 border-b border-gray-200\">\n              <div className=\"flex items-start justify-between\">\n                <div>\n                  <h2 className=\"text-2xl font-bold text-gray-900\">{viewingJob.title}</h2>\n                  <p className=\"text-lg text-[#5C3AEB] font-semibold mt-1\">{viewingJob.employer}</p>\n                </div>\n                <button \n                  onClick={closeJobDetailsModal}\n                  className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\n                >\n                  <X className=\"w-5 h-5\" />\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"p-6 overflow-y-auto max-h-[calc(90vh-140px)]\">\n              <div className=\"grid gap-6\">\n                {/* Job Details */}\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                  <div className=\"flex items-center gap-3\">\n                    <MapPin className=\"w-5 h-5 text-gray-400\" />\n                    <div>\n                      <div className=\"text-sm text-gray-600\">Location</div>\n                      <div className=\"font-semibold\">{viewingJob.location}</div>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center gap-3\">\n                    <Building className=\"w-5 h-5 text-gray-400\" />\n                    <div>\n                      <div className=\"text-sm text-gray-600\">Sector</div>\n                      <div className=\"font-semibold\">{viewingJob.sector}</div>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center gap-3\">\n                    <Target className=\"w-5 h-5 text-gray-400\" />\n                    <div>\n                      <div className=\"text-sm text-gray-600\">Experience</div>\n                      <div className=\"font-semibold\">{viewingJob.experience_level}</div>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center gap-3\">\n                    <DollarSign className=\"w-5 h-5 text-gray-400\" />\n                    <div>\n                      <div className=\"text-sm text-gray-600\">Salary</div>\n                      <div className=\"font-semibold text-green-600\">{viewingJob.salary}</div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Job Description */}\n                <div>\n                  <h3 className=\"text-lg font-semibold mb-3\">Job Description</h3>\n                  <div className=\"prose prose-gray max-w-none\">\n                    <p className=\"text-gray-700 leading-relaxed\">{viewingJob.job_description}</p>\n                  </div>\n                </div>\n\n                {/* Requirements */}\n                <div>\n                  <h3 className=\"text-lg font-semibold mb-3\">Requirements</h3>\n                  <ul className=\"space-y-2 text-gray-700\">\n                    <li className=\"flex items-center gap-2\">\n                      <Star className=\"w-4 h-4 text-[#5C3AEB] flex-shrink-0\" />\n                      {viewingJob.experience_length} of experience in related field\n                    </li>\n                    <li className=\"flex items-center gap-2\">\n                      <Star className=\"w-4 h-4 text-[#5C3AEB] flex-shrink-0\" />\n                      Strong communication and teamwork skills\n                    </li>\n                    <li className=\"flex items-center gap-2\">\n                      <Star className=\"w-4 h-4 text-[#5C3AEB] flex-shrink-0\" />\n                      Relevant certifications or degrees preferred\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"p-6 border-t border-gray-200\">\n              <div className=\"flex items-center justify-between\">\n                <button\n                  onClick={closeJobDetailsModal}\n                  className=\"px-6 py-2 text-gray-600 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\"\n                >\n                  Close\n                </button>\n                <button\n                  onClick={() => applyToJob(viewingJob)}\n                  className=\"px-6 py-2 bg-[#5C3AEB] text-white rounded-lg hover:bg-[#342299] transition-colors font-semibold\"\n                >\n                  Apply for this Position\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Application Modal */}\n      {showApplicationModal && (\n        <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-2xl max-w-4xl w-full max-h-[90vh] overflow-hidden\">\n            <div className=\"p-6 border-b border-gray-200\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <h2 className=\"text-xl font-bold\">Apply for Position</h2>\n                  <p className=\"text-[#5C3AEB] font-semibold\">{selectedJob?.title} at {selectedJob?.employer}</p>\n                </div>\n                <button \n                  onClick={closeApplicationModal}\n                  className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\n                >\n                  <X className=\"w-5 h-5\" />\n                </button>\n              </div>\n            </div>\n            \n            <form onSubmit={submitApplication} className=\"p-6 overflow-y-auto max-h-[calc(90vh-140px)]\">\n              <div className=\"space-y-6\">\n                {/* Personal Information Section */}\n                <div className=\"space-y-4\">\n                  <h4 className=\"flex items-center gap-2 text-lg font-semibold\">\n                    <User className=\"w-5 h-5 text-blue-600\" />\n                    Personal Information\n                  </h4>\n                  \n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-sm font-semibold mb-2\">First Name *</label>\n                      <input \n                        type=\"text\" \n                        value={applicationForm.applicantDetails.firstName}\n                        onChange={(e) => setApplicationForm(prev => ({\n                          ...prev,\n                          applicantDetails: { ...prev.applicantDetails, firstName: e.target.value }\n                        }))}\n                        className={`w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-[#5C3AEB] ${\n                          applicationErrors.firstName ? 'border-red-500' : 'border-gray-300'\n                        }`}\n                        placeholder=\"Enter your first name\"\n                      />\n                      {applicationErrors.firstName && (\n                        <p className=\"text-red-500 text-xs mt-1\">{applicationErrors.firstName}</p>\n                      )}\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-semibold mb-2\">Last Name *</label>\n                      <input \n                        type=\"text\" \n                        value={applicationForm.applicantDetails.lastName}\n                        onChange={(e) => setApplicationForm(prev => ({\n                          ...prev,\n                          applicantDetails: { ...prev.applicantDetails, lastName: e.target.value }\n                        }))}\n                        className={`w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-[#5C3AEB] ${\n                          applicationErrors.lastName ? 'border-red-500' : 'border-gray-300'\n                        }`}\n                        placeholder=\"Enter your last name\"\n                      />\n                      {applicationErrors.lastName && (\n                        <p className=\"text-red-500 text-xs mt-1\">{applicationErrors.lastName}</p>\n                      )}\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-semibold mb-2\">Email Address *</label>\n                      <input \n                        type=\"email\" \n                        value={applicationForm.applicantDetails.email}\n                        onChange={(e) => setApplicationForm(prev => ({\n                          ...prev,\n                          applicantDetails: { ...prev.applicantDetails, email: e.target.value }\n                        }))}\n                        className={`w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-[#5C3AEB] ${\n                          applicationErrors.email ? 'border-red-500' : 'border-gray-300'\n                        }`}\n                        placeholder=\"Enter your email\"\n                      />\n                      {applicationErrors.email && (\n                        <p className=\"text-red-500 text-xs mt-1\">{applicationErrors.email}</p>\n                      )}\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-semibold mb-2\">Phone Number *</label>\n                      <input \n                        type=\"tel\" \n                        value={applicationForm.applicantDetails.phone}\n                        onChange={(e) => setApplicationForm(prev => ({\n                          ...prev,\n                          applicantDetails: { ...prev.applicantDetails, phone: e.target.value }\n                        }))}\n                        className={`w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-[#5C3AEB] ${\n                          applicationErrors.phone ? 'border-red-500' : 'border-gray-300'\n                        }`}\n                        placeholder=\"Enter your phone number\"\n                      />\n                      {applicationErrors.phone && (\n                        <p className=\"text-red-500 text-xs mt-1\">{applicationErrors.phone}</p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n\n                {/* Resume Upload Section */}\n                <div className=\"space-y-4\">\n                  <h4 className=\"flex items-center gap-2 text-lg font-semibold\">\n                    <FileText className=\"w-5 h-5 text-blue-600\" />\n                    Resume/CV\n                  </h4>\n                  \n                  <div>\n                    <label className=\"block text-sm font-semibold mb-2\">Upload Resume *</label>\n                    \n                    {!resumeFile ? (\n                      <div \n                        className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-[#5C3AEB] transition-colors cursor-pointer\"\n                        onClick={() => fileInputRef.current?.click()}\n                      >\n                        <Upload className=\"w-8 h-8 text-gray-400 mx-auto mb-2\" />\n                        <p className=\"text-sm text-gray-600 mb-1\">Click to upload resume</p>\n                        <p className=\"text-xs text-gray-500\">PDF, DOC, DOCX (Max 5MB)</p>\n                      </div>\n                    ) : (\n                      <div className=\"border border-gray-300 rounded-lg p-4\">\n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center space-x-3\">\n                            <FileText className=\"w-5 h-5 text-[#5C3AEB]\" />\n                            <div>\n                              <p className=\"text-sm font-medium text-gray-900\">{resumeFile.name}</p>\n                              <p className=\"text-xs text-gray-500\">\n                                {(resumeFile.size / (1024 * 1024)).toFixed(2)} MB\n                              </p>\n                            </div>\n                          </div>\n                          <button\n                            type=\"button\"\n                            onClick={removeFile}\n                            className=\"p-1 text-gray-400 hover:text-red-500 rounded transition-colors\"\n                          >\n                            <X className=\"w-4 h-4\" />\n                          </button>\n                        </div>\n                      </div>\n                    )}\n                    \n                    <input \n                      ref={fileInputRef}\n                      type=\"file\" \n                      accept=\".pdf,.doc,.docx\"\n                      onChange={handleFileUpload}\n                      className=\"hidden\" \n                    />\n                    \n                    {applicationErrors.resume && (\n                      <p className=\"text-red-500 text-xs mt-1\">{applicationErrors.resume}</p>\n                    )}\n                  </div>\n                </div>\n\n                {/* Skills Section */}\n                <div className=\"space-y-4\">\n                  <h4 className=\"flex items-center gap-2 text-lg font-semibold\">\n                    <Zap className=\"w-5 h-5 text-blue-600\" />\n                    Skills\n                  </h4>\n                  \n                  <div>\n                    <label className=\"block text-sm font-semibold mb-2\">Add Skills</label>\n                    <div className=\"flex space-x-2\">\n                      <input\n                        type=\"text\"\n                        value={newSkill}\n                        onChange={(e) => setNewSkill(e.target.value)}\n                        onKeyPress={(e) => e.key === 'Enter' && (e.preventDefault(), addSkill())}\n                        className=\"flex-1 border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-[#5C3AEB]\"\n                        placeholder=\"Enter a skill\"\n                      />\n                      <button\n                        type=\"button\"\n                        onClick={addSkill}\n                        className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n                      >\n                        <Plus className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n                    \n                    {applicationForm.skills.length > 0 && (\n                      <div className=\"flex flex-wrap gap-2 mt-3\">\n                        {applicationForm.skills.map((skill, index) => (\n                          <span\n                            key={index}\n                            className=\"inline-flex items-center px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm\"\n                          >\n                            {skill}\n                            <button\n                              type=\"button\"\n                              onClick={() => removeSkill(index)}\n                              className=\"ml-2 text-blue-600 hover:text-blue-800\"\n                            >\n                              <X className=\"w-3 h-3\" />\n                            </button>\n                          </span>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                {/* Cover Letter Section */}\n                <div className=\"space-y-4\">\n                  <h4 className=\"flex items-center gap-2 text-lg font-semibold\">\n                    <MessageSquare className=\"w-5 h-5 text-blue-600\" />\n                    Cover Letter\n                  </h4>\n                  \n                  <div>\n                    <label className=\"block text-sm font-semibold mb-2\">Cover Letter (Optional)</label>\n                    <textarea\n                      value={applicationForm.coverLetter}\n                      onChange={(e) => setApplicationForm(prev => ({ ...prev, coverLetter: e.target.value }))}\n                      rows={6}\n                      maxLength={5000}\n                      className=\"w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-[#5C3AEB]\"\n                      placeholder=\"Write a personalized cover letter for this position...\"\n                    />\n                    <div className=\"text-xs text-gray-500 mt-1 text-right\">\n                      {applicationForm.coverLetter.length}/5000 characters\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"flex gap-3 mt-6\">\n                <button\n                  type=\"button\"\n                  onClick={closeApplicationModal}\n                  disabled={applicationLoading}\n                  className=\"flex-1 px-4 py-2 text-gray-600 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  disabled={applicationLoading}\n                  className=\"flex-1 px-4 py-2 bg-[#5C3AEB] text-white rounded-lg hover:bg-[#342299] disabled:opacity-50 transition-colors font-semibold flex items-center justify-center gap-2\"\n                >\n                  {applicationLoading ? (\n                    <>\n                      <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n                      <span>Submitting...</span>\n                    </>\n                  ) : (\n                    <>\n                      <Send className=\"w-4 h-4\" />\n                      <span>Submit Application</span>\n                    </>\n                  )}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default JobsPage\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"names":[],"mappings":"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","debugId":null}}]
}